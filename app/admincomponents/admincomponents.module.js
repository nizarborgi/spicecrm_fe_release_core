/*
SpiceUI 2018.10.001

Copyright (c) 2016-present, aac services.k.s - All rights reserved.
Redistribution and use in source and binary forms, without modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain this copyright and license notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
- If used the SpiceCRM Logo needs to be displayed in the upper left corner of the screen in a minimum dimension of 31x31 pixels and be clearly visible, the icon needs to provide a link to http://www.spicecrm.io
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

/*(c) aac services 2019. All Rights reserved)*/
"use strict";var __decorate=this&&this.__decorate||function(e,t,s,i){var a,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,s,i);else for(var l=e.length-1;0<=l;l--)(a=e[l])&&(o=(n<3?a(o):3<n?a(t,s,o):a(t,s))||o);return 3<n&&o&&Object.defineProperty(t,s,o),o},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var common_1=require("@angular/common"),forms_1=require("@angular/forms"),core_1=require("@angular/core"),services_1=require("../services/services"),router_1=require("@angular/router"),directives_1=require("../directives/directives"),systemcomponents_1=require("../systemcomponents/systemcomponents"),rxjs_1=require("rxjs"),http_1=require("@angular/common/http"),administrationconfigurator=function(){function e(e,t){this.backend=e,this.modelutilities=t,this.dictionary="",this.entries=[],this.sorting={field:"",direction:""},this.fielddefobj={}}return e.prototype.loadEntries=function(l){var d=this;void 0===l&&(l=[]),this.backend.getRequest("configurator/entries/"+this.dictionary).subscribe(function(e){d.fielddefobj={};for(var t=0,s=l;t<s.length;t++){var i=s[t];d.fielddefobj[i.name]=i.type?i.type:""}for(var a=0,n=e;a<n.length;a++){var o=n[a];d.entries.push({id:o.id,mode:"",data:d.mapData(o)})}})},e.prototype.mapData=function(e){for(var t in this.fielddefobj)switch(this.fielddefobj[t]){case"boolean":e[t]="1"==e[t]}return e},e.prototype.remapData=function(e){var t={};for(var s in this.fielddefobj)switch(this.fielddefobj[s]){case"boolean":t[s]="true"==e[s]?"1":"0";break;default:t[s]=e[s]}return t},e.prototype.addEntry=function(){var e=this.modelutilities.generateGuid();this.entries.unshift({id:e,mode:"new",data:{id:e}})},e.prototype.saveEntry=function(e){var s=this;this.entries.some(function(t){if(t.id===e)return delete t.backup,s.backend.postRequest("configurator/"+s.dictionary+"/"+e,{},s.remapData(t.data)).subscribe(function(e){t.mode=""}),!0})},e.prototype.deleteEntry=function(s){var i=this;this.entries.some(function(e,t){if(e.id===s)return delete e.backup,i.backend.deleteRequest("configurator/"+i.dictionary+"/"+s).subscribe(function(e){i.entries.splice(t,1)}),!0})},e.prototype.setEditMode=function(t){this.entries.some(function(e){if(e.id===t)return e.mode="edit",e.backup=JSON.parse(JSON.stringify(e.data)),!0})},e.prototype.cancelEditMode=function(s){var i=this;this.entries.some(function(e,t){if(e.id===s)return"new"===e.mode?i.entries.splice(t,1):(e.data=JSON.parse(JSON.stringify(e.backup)),delete e.backup,e.mode=""),!0})},e.prototype.isEditMode=function(t){var s=!1;return this.entries.some(function(e){if(e.id===t)return s="edit"===e.mode||"new"===e.mode,!0}),s},e.prototype.copy=function(s){var i=this;this.entries.some(function(e){if(e.id===s){var t={};return t.data=JSON.parse(JSON.stringify(e.data)),t.mode="new",t.id=i.modelutilities.generateGuid(),t.data.id=t.id,i.entries.unshift(t),!0}})},e.prototype.sort=function(e){var s=this;this.sorting.field===e?this.sorting.direction="asc"==this.sorting.direction?"dsc":"asc":(this.sorting.field=e,this.sorting.direction="asc"),this.entries.sort(function(e,t){return e.data[s.sorting.field]==t.data[s.sorting.field]?0:"asc"==s.sorting.direction?e.data[s.sorting.field]<t.data[s.sorting.field]?-1:1:e.data[s.sorting.field]<t.data[s.sorting.field]?1:-1})},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[services_1.backend,services_1.modelutilities])],e)}();exports.administrationconfigurator=administrationconfigurator;var ftsconfiguration=function(){function e(e,t,s,i){this.backend=e,this.metadata=t,this.language=s,this.toast=i,this.module="",this.moduleFtsFields=[],this.moduleFtsSettings={},this.indexing=!1}return e.prototype.setModule=function(e){this.module=e,this.getModuleFtsFields(),this.getModuleSettings()},e.prototype.getModuleFtsFields=function(){var t=this;this.moduleFtsFields=[],this.backend.getRequest("ftsmanager/"+this.module+"/fields").subscribe(function(e){t.moduleFtsFields=e})},e.prototype.getModuleSettings=function(){var t=this;this.moduleFtsFields=[],this.backend.getRequest("ftsmanager/"+this.module+"/settings").subscribe(function(e){t.moduleFtsSettings=e})},e.prototype.getFieldDetails=function(t){var s={};return this.moduleFtsFields.some(function(e){if(e.id===t)return s=e,!0}),s},e.prototype.save=function(){var t=this,e={fields:this.moduleFtsFields,settings:this.moduleFtsSettings};this.backend.postRequest("ftsmanager/"+this.module,{},e).subscribe(function(e){e?t.toast.sendToast(t.language.getLabel("LBL_DATA_SAVED"),"success"):t.toast.sendToast(t.language.getLabel("ERR_NETWORK"),"error")})},e.prototype.searchPath=function(t){var s=!1;return this.moduleFtsFields.some(function(e){if(e.path===t)return s=!0}),s},e.prototype.putMapping=function(){var t=this;this.indexing=!0,this.backend.deleteRequest("ftsmanager/"+this.module).subscribe(function(e){t.backend.postRequest("ftsmanager/"+t.module+"/map").subscribe(function(e){t.indexing=!1})})},e.prototype.indexModule=function(){var t=this;this.indexing=!0,this.backend.postRequest("ftsmanager/"+this.module+"/index").subscribe(function(e){t.indexing=!1},function(e){t.indexing=!1})},e.prototype.initialize=function(){var t=this;this.indexing=!0,this.backend.postRequest("ftsmanager/core/initialize").subscribe(function(e){t.indexing=!1},function(e){t.indexing=!1})},e.prototype.resetModule=function(){var t=this;this.indexing=!0,this.backend.postRequest("ftsmanager/"+this.module+"/resetindex").subscribe(function(e){t.indexing=!1},function(e){t.indexing=!1})},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.toast])],e)}();exports.ftsconfiguration=ftsconfiguration;var dictionary=function(){function e(e,t,s,i){this.http=e,this.configurationService=t,this.session=s,this.metadata=i,this.data=[],this.dictionaryitem="",this.dictionaryfields=[]}return e.prototype.load=function(e){var t=this,s=new rxjs_1.Subject;return this.dictionaryitem=e,this.http.get(this.configurationService.getBackendUrl()+"/dictionary/list/"+e+"?sessionid="+this.session.authData.sessionId).subscribe(function(e){t.data=e.items,t.dictionaryfields=e.fields,s.next(e),s.complete()}),s.asObservable()},e.prototype.getFields=function(){for(var e=[],t=0,s=this.dictionaryfields;t<s.length;t++){var i=s[t];"id"!==i&&e.push(i)}return e},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.HttpClient,services_1.configurationService,services_1.session,services_1.metadata])],e)}();exports.dictionary=dictionary;var AdministrationMenu=function(){function e(e,t,s,i,a,n,o){var l=this;this.metadata=e,this.language=t,this.backend=s,this.broadcast=i,this.navigation=a,this.elementref=n,this.session=o,this.admincontentObject=null,this.adminNavigation={},this.itemfilter="",this.opened_itemid={},this.loadNavigation(),this.navigation.setActiveModule("Administration"),this.broadcastsubscription=this.broadcast.message$.subscribe(function(e){l.handleMessage(e)})}return e.prototype.ngOnDestroy=function(){this.broadcastsubscription.unsubscribe()},e.prototype.handleMessage=function(e){switch(e.messagetype){case"loader.reloaded":this.loadNavigation()}},e.prototype.loadNavigation=function(){var t=this;this.backend.getRequest("spiceui/admin/navigation").subscribe(function(e){t.adminNavigation=e})},e.prototype.getContainerStyle=function(){return{height:"calc(100vh - "+this.elementref.nativeElement.offsetTop+"px)"}},e.prototype.getNavigationBlocks=function(){var i=this,t=[],e=function(e){var s=""==a.itemfilter;s||a.adminNavigation[e].some(function(e){var t=e.adminaction;if(e.admin_label&&(t=i.language.getLabel(e.admin_label)),0<=t.toLowerCase().indexOf(i.itemfilter.toLowerCase()))return s=!0}),s&&t.push(e)},a=this;for(var s in this.adminNavigation)e(s);return t.sort()},e.prototype.getNavigationItems=function(e){for(var t=[],s=0,i=this.adminNavigation[e];s<i.length;s++){var a=i[s];a.componentconfig.onlyForDevs&&!this.session.isDev||(a.name=a.adminaction,a.admin_label&&(a.name=this.language.getLabel(a.admin_label)),(""==this.itemfilter||0<=a.name.toLowerCase().indexOf(this.itemfilter.toLowerCase()))&&t.push(a))}return t},e.prototype.openContent=function(e,t){var s=this;if(this.opened_itemid==t.id)return!0;this.opened_itemid=t.id,this.admincontentObject&&this.admincontentObject.destroy();var i={};if(!this.adminNavigation[e])return!1;this.adminNavigation[e].some(function(e){if(e.id==t.id)return i=e,!0}),i.component&&this.metadata.addComponent(i.component,this.admincontentcontainer).subscribe(function(e){e.instance.componentconfig=i.componentconfig,s.admincontentObject=e})},__decorate([core_1.ViewChild("admincontentcontainer",{read:core_1.ViewContainerRef}),__metadata("design:type",core_1.ViewContainerRef)],e.prototype,"admincontentcontainer",void 0),e=__decorate([core_1.Component({selector:"[administration-menu]",template:'<div class="slds-grid" [ngStyle]="getContainerStyle()"><div class="slds-grid slds-grid--vertical slds-navigation-list--vertical slds-navigation-list--vertical-inverse slds-border--right" style="height:100%;width: 250px;"><div class="slds-p-horizontal--xx-small slds-p-vertical--small slds-border--bottom"><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right slds-input-has-icon_group-right slds-m-vertical--xx-small"><input type="text" class="slds-input" [placeholder]="language.getLabel(\'LBL_SEARCH\')" [(ngModel)]="itemfilter"><system-utility-icon *ngIf="itemfilter == \'\'" [icon]="\'search\'" [addclasses]="\'slds-input__icon slds-input__icon--left\'"></system-utility-icon><div *ngIf="itemfilter != \'\'" class="slds-input__icon-group slds-input__icon-group_right" style="margin-top: initial;"><button class="slds-input__icon slds-input__icon_right slds-button slds-button_icon" (click)="itemfilter = \'\'" tabindex="-1"><system-button-icon [icon]="\'clear\'"></system-button-icon></button></div></div></div><div tobottom><ng-container *ngFor="let adminNavigationBlock of getNavigationBlocks()"><h2 class="slds-text-title--caps slds-p-around--medium">{{adminNavigationBlock}}</h2><ul><li *ngFor="let item of getNavigationItems(adminNavigationBlock)"><a href="javascript:void(0);" class="slds-navigation-list--vertical__action slds-text-link--reset" (click)="openContent(adminNavigationBlock, item)" [ngClass]="{\'slds-theme_inverse\': item.id == opened_itemid}">{{item.name}}</a></li></ul></ng-container></div></div><div style="width:100%; height: 100%;" class="slds-scrollable"><div #admincontentcontainer></div></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.backend,services_1.broadcast,services_1.navigation,core_1.ElementRef,services_1.session])],e)}();exports.AdministrationMenu=AdministrationMenu;var AdministrationMenuRouteItem=function(){function AdministrationMenuRouteItem(e){this.router=e,this.componentconfig={},this.self={}}return AdministrationMenuRouteItem.prototype.ngOnInit=function(){this.componentconfig.route&&this.router.navigate([this.componentconfig.route])},AdministrationMenuRouteItem=__decorate([core_1.Component({template:""}),__metadata("design:paramtypes",[router_1.Router])],AdministrationMenuRouteItem)}();exports.AdministrationMenuRouteItem=AdministrationMenuRouteItem;var AdministrationConfigurator=function(){function AdministrationConfigurator(e,t,s){this.metadata=e,this.administrationconfigurator=t,this.language=s,this.componentconfig={},this.displayFilters=!1,this.filters={}}return AdministrationConfigurator.prototype.ngOnInit=function(){this.administrationconfigurator.dictionary=this.componentconfig.dictionary,this.administrationconfigurator.loadEntries(this.componentconfig.fields)},Object.defineProperty(AdministrationConfigurator.prototype,"count",{get:function(){return this.administrationconfigurator.entries.length},enumerable:!0,configurable:!0}),AdministrationConfigurator.prototype.getEntries=function(){for(var e=[],t=0,s=this.administrationconfigurator.entries;t<s.length;t++){var i=s[t],a=!1;if(this.displayFilters)for(var n in this.filters)!this.administrationconfigurator.isEditMode(i.id)&&this.filters[n]&&i.data[n]&&-1==i.data[n].indexOf(this.filters[n])&&(a=!0);a||e.push(i)}return e},AdministrationConfigurator.prototype.getFields=function(){for(var e=[],t=0,s=this.componentconfig.fields;t<s.length;t++){var i=s[t];!0!==i.hidden&&e.push(i)}return e},AdministrationConfigurator.prototype.addEntry=function(){this.administrationconfigurator.addEntry()},AdministrationConfigurator.prototype.sort=function(e){this.administrationconfigurator.sort(e)},AdministrationConfigurator.prototype.toggleFilter=function(){this.displayFilters=!this.displayFilters},AdministrationConfigurator.prototype.clearFilter=function(){this.filters={}},AdministrationConfigurator=__decorate([core_1.Component({selector:"administration-configurator",template:'<div class="slds-grid slds-grid--align-spread slds-p-around--medium"><h2 class="slds-text-heading--medium">{{language.getLabel(\'LBL_DICTIONARY_ITEM\')}}: {{componentconfig.dictionary}} ({{count}} {{language.getLabel(\'LBL_RECORDS\')}})</h2><button class="slds-button slds-button--neutral" (click)="addEntry()">{{language.getLabel(\'LBL_ADD\')}}</button></div><table class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th *ngFor="let field of getFields()" scope="col" (click)="sort(field.name)"><div class="slds-truncate slds-p-horizontal--small">{{field.name}}<ng-container *ngIf="administrationconfigurator.sorting.field == field.name"><system-utility-icon *ngIf="administrationconfigurator.sorting.direction == \'asc\'" [icon]="\'arrowup\'" [size]="\'x-small\'"></system-utility-icon><system-utility-icon *ngIf="administrationconfigurator.sorting.direction == \'dsc\'" [icon]="\'arrowdown\'" [size]="\'x-small\'"></system-utility-icon></ng-container></div></th><th scope="col" style="width:2rem;"><div class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="toggleFilter()"><system-button-icon [icon]="\'filterList\'" [size]="\'small\'"></system-button-icon></button></div></th></tr><tr *ngIf="displayFilters" class="slds-theme--shade"><td *ngFor="let field of getFields()"><div class="slds-form-element"><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="filters[field.name]"></div></div></td><td><div class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="clearFilter()"><system-button-icon [icon]="\'clear\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="toggleFilter()"><system-button-icon [icon]="\'chevronup\'" [size]="\'small\'"></system-button-icon></button></div></td></tr></thead><tbody><tr style="vertical-align: middle" class="slds-align-top" administration-configurator-item *ngFor="let entry of getEntries()" [entry]="entry" [fields]="getFields()"></tr></tbody></table>',providers:[administrationconfigurator]}),__metadata("design:paramtypes",[services_1.metadata,administrationconfigurator,services_1.language])],AdministrationConfigurator)}();exports.AdministrationConfigurator=AdministrationConfigurator;var AdministrationConfiguratorItem=function(){function e(e){this.administrationconfigurator=e,this.fields=[],this.entry={}}return e.prototype.ngOnInit=function(){},e.prototype.setEditMode=function(){this.administrationconfigurator.setEditMode(this.entry.id)},e.prototype.isEditMode=function(e){return void 0===e&&(e=null),e?!e.readonly&&this.administrationconfigurator.isEditMode(this.entry.id):this.administrationconfigurator.isEditMode(this.entry.id)},e.prototype.setViewMode=function(){this.administrationconfigurator.cancelEditMode(this.entry.id)},e.prototype.save=function(){this.administrationconfigurator.saveEntry(this.entry.id)},e.prototype.delete=function(){this.administrationconfigurator.deleteEntry(this.entry.id)},e.prototype.copy=function(e){this.administrationconfigurator.copy(e)},e.prototype.getJSON=function(t){try{var e=JSON.parse(t);return JSON.stringify(e,null,2)}catch(e){return t}},__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"fields",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"entry",void 0),e=__decorate([core_1.Component({selector:"[administration-configurator-item]",template:'<td *ngFor="let field of fields"><div *ngIf="!isEditMode(field);else editfield" class="slds-truncate slds-p-horizontal--small" style="max-width: 200px;" [ngSwitch]="field.type"><span *ngSwitchCase="\'json\'"><pre class="slds-m-vertical--none">{{getJSON(entry.data[field.name])}}</pre></span> <span *ngSwitchCase="\'text\'" class="slds-truncate_container_25" style="max-width: 200px;">{{entry.data[field.name]}}</span><div *ngSwitchCase="\'bool\'" class="slds-checkbox"><input disabled type="checkbox" [id]="entry.data.id + field.name" [(ngModel)]="entry.data[field.name]"> <label class="slds-checkbox__label" [attr.for]="entry.data.id + field.name"><span class="slds-checkbox_faux"></span></label></div><administration-configurator-item-role *ngSwitchCase="\'role\'" [editmode]="false" [fieldvalue]="entry.data[field.name]"></administration-configurator-item-role><span *ngSwitchDefault>{{entry.data[field.name]}}</span></div><ng-template #editfield><div class="slds-form-element"><div class="slds-form-element__control" [ngSwitch]="field.type"><textarea *ngSwitchCase="\'json\'" class="slds-textarea slds-scrollable--y slds-m-vertical--xx-small" [(ngModel)]="entry.data[field.name]"></textarea> <textarea *ngSwitchCase="\'text\'" class="slds-textarea slds-scrollable--y slds-m-vertical--xx-small" [(ngModel)]="entry.data[field.name]"></textarea><div *ngSwitchCase="\'bool\'" class="slds-checkbox slds-p-horizontal--small"><input type="checkbox" [id]="entry.data.id + field.name" [(ngModel)]="entry.data[field.name]"> <label class="slds-checkbox__label" [attr.for]="entry.data.id + field.name"><span class="slds-checkbox_faux"></span></label></div><administration-configurator-item-role *ngSwitchCase="\'role\'" [editmode]="true" [(fieldvalue)]="entry.data[field.name]"></administration-configurator-item-role><input *ngSwitchDefault type="text" class="slds-input" [(ngModel)]="entry.data[field.name]"></div></div></ng-template></td><td><div *ngIf="!isEditMode()" class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="setEditMode()"><system-button-icon [icon]="\'edit\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="copy(entry.id)"><system-button-icon [icon]="\'copy\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="delete()"><system-button-icon [icon]="\'delete\'" [size]="\'small\'"></system-button-icon></button></div><div *ngIf="isEditMode()" class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="setViewMode()"><system-button-icon [icon]="\'close\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="save()"><system-button-icon [icon]="\'check\'" [size]="\'small\'"></system-button-icon></button></div></td>'}),__metadata("design:paramtypes",[administrationconfigurator])],e)}();exports.AdministrationConfiguratorItem=AdministrationConfiguratorItem;var AdministrationConfiguratorItemRole=function(){function e(e){this.metadata=e,this.editmode=!1,this.fieldvalue={},this.fieldvalueChange=new core_1.EventEmitter,this.roles=[]}return e.prototype.loadRoles=function(){var e=this.metadata.getRoles();e.sort(function(e,t){return e.name>t.name?1:-1});for(var t=0,s=e;t<s.length;t++){var i=s[t];this.roles.push(i)}},e.prototype.ngOnInit=function(){(this.editmode||"*"!=this.fieldvalue)&&this.loadRoles()},Object.defineProperty(e.prototype,"roleValue",{get:function(){return this.fieldvalue},set:function(e){this.fieldvalue=e,this.fieldvalueChange.emit(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rolename",{get:function(){for(var e=0,t=this.roles;e<t.length;e++){var s=t[e];if(s.id==this.fieldvalue)return s.name}return this.fieldvalue},enumerable:!0,configurable:!0}),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"editmode",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"fieldvalue",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"fieldvalueChange",void 0),e=__decorate([core_1.Component({selector:"administration-configurator-item-role",template:'<div *ngIf="!editmode"><div class="slds-truncate">{{rolename}}</div></div><div *ngIf="editmode" class="slds-form-element"><div class="slds-form-element__control"><div class="slds-select_container slds-m-vertical--xx-small"><select class="slds-select" [(ngModel)]="roleValue"><option value="*">*</option><option *ngFor="let role of roles" [value]="role.id">{{role.name}}</option></select></div></div></div>'}),__metadata("design:paramtypes",[services_1.metadata])],e)}();exports.AdministrationConfiguratorItemRole=AdministrationConfiguratorItemRole;var AdministrationQuotaManager=function(){function AdministrationQuotaManager(e){this.backend=e,this.users=[],this.monthlyQuotas={},this.quotas=[],this.yearlyQuotas={},this.year=(new Date).getFullYear(),this.monthNamesList=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],this.yearsList=[]}return AdministrationQuotaManager.prototype.ngOnInit=function(){this.getYears(),this.getQuotaUsers()},AdministrationQuotaManager.prototype.getYears=function(){for(var e=(new Date).getFullYear(),t=e-2;t<e+7;t++)this.yearsList.push(t)},AdministrationQuotaManager.prototype.getQuotaUsers=function(){var a=this;this.backend.getRequest("quotamanager/users").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var i=s[t];a.users.push({id:i.id,mode:"",data:i}),0}a.getQuotas().subscribe()})},AdministrationQuotaManager.prototype.getQuotas=function(){var r=this,c=new rxjs_1.Subject;return this.backend.getRequest("quotamanager/quotas/"+this.year).subscribe(function(e){r.quotas=e,r.monthlyQuotas={},r.yearlyQuotas={};for(var t=0,s=e;t<s.length;t++){var i=s[t],a=i.assigned_user_id,n=Math.round(i.sales_quota),o=i.period-1;r.monthlyQuotas[a]||(r.monthlyQuotas[a]=new Array(12)),r.monthlyQuotas[a][o]=n,r.yearlyQuotas[a]||(r.yearlyQuotas[a]=0),r.yearlyQuotas[a]+=n}c.next(r.users),c.complete();for(var l=0,d=r.users;l<d.length;l++){a=d[l].data.id;r.monthlyQuotas[a]||(r.monthlyQuotas[a]=new Array(12)),r.yearlyQuotas[a]||(r.yearlyQuotas[a]=0)}}),c.asObservable()},AdministrationQuotaManager.prototype.updateQuota=function(e,t,s){var i=e.target.value?+e.target.value:0,a=this.monthlyQuotas[t][s];a=a||0,this.yearlyQuotas[t]-=a-i,0<i?(this.monthlyQuotas[t][s]=i,this.backend.postRequest("quotamanager/quota/"+t+"/"+this.year+"/"+(s+1)+"/"+i)):(delete this.monthlyQuotas[t][s],this.backend.deleteRequest("quotamanager/quota/"+t+"/"+this.year+"/"+(s+1)))},AdministrationQuotaManager=__decorate([core_1.Component({selector:"administration-quotamanager",template:'<div class="slds-page-header"><div class="slds-grid slds-grid_vertical-align-center slds-grid--align-spread"><div class="slds-media"><div class="slds-media__body"><h1 class="slds-page-header__title slds-truncate slds-align-middle">Quota Manager</h1></div></div><div class="slds-p-top--small"><label for="year-select">Year</label><select id="year-select" [(ngModel)]="year" (change)="getQuotas()"><option *ngFor="let aYear of yearsList">{{aYear}}</option></select></div></div></div><div class="slds-scrollable--x"><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col">Name</th><th scope="col">Total</th><th scope="col" *ngFor="let monthName of monthNamesList">{{monthName}}</th></tr></thead><tbody><tr *ngFor="let quotaUser of users" class="slds-text-title_caps"><td>{{quotaUser.data.last_name}} {{quotaUser.data.first_name}} ({{quotaUser.data.user_name}})</td><td>{{yearlyQuotas[quotaUser.data.id]}}</td><td *ngFor="let quota of monthlyQuotas[quotaUser.data.id]; let monthIndex = index"><administration-quotamanager-field [userid]="quotaUser.data.id" [data]="quotas" [monthindex]="monthIndex" [year]="year"></administration-quotamanager-field></td></tr></tbody></table></div>'}),__metadata("design:paramtypes",[services_1.backend])],AdministrationQuotaManager)}();exports.AdministrationQuotaManager=AdministrationQuotaManager;var AdministrationQuotaManagerField=function(){function e(e){this.backend=e,this.userid="",this.monthindex=0,this.year=0,this.data=[]}return Object.defineProperty(e.prototype,"value",{get:function(){for(var e=0,t=this.data;e<t.length;e++){var s=t[e];if(s&&s.assigned_user_id===this.userid&&s.period===""+(this.monthindex+1))return""+Math.round(s.sales_quota)}return""},set:function(e){for(var t=0,s=+e,i=0,a=this.data;i<a.length;i++){var n=a[i];n&&n.assigned_user_id===this.userid&&n.period===""+(this.monthindex+1)&&(0<s?this.data[t].sales_quota=e:delete this.data[t]),t++}0<s?this.backend.postRequest("quotamanager/quota/"+this.userid+"/"+this.year+"/"+(this.monthindex+1)+"/"+e).subscribe(function(e){}):this.backend.deleteRequest("quotamanager/quota/"+this.userid+"/"+this.year+"/"+(this.monthindex+1))},enumerable:!0,configurable:!0}),e.prototype.changeValue=function(e){},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"userid",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],e.prototype,"monthindex",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],e.prototype,"year",void 0),__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"data",void 0),e=__decorate([core_1.Component({selector:"administration-quotamanager-field",template:'<input style="width:80px;" [(ngModel)]="value" (ngModelChange)="changeValue($event)">'}),__metadata("design:paramtypes",[services_1.backend])],e)}();exports.AdministrationQuotaManagerField=AdministrationQuotaManagerField;var AdministrationFTSManager=function(){function AdministrationFTSManager(e,t,s){this.metadata=e,this.language=t,this.ftsconfiguration=s,this.activeTab="fields"}return Object.defineProperty(AdministrationFTSManager.prototype,"modules",{get:function(){return this.metadata.getModules().sort()},enumerable:!0,configurable:!0}),Object.defineProperty(AdministrationFTSManager.prototype,"module",{get:function(){return this.ftsconfiguration.module},set:function(e){this.ftsconfiguration.setModule(e)},enumerable:!0,configurable:!0}),AdministrationFTSManager.prototype.setActiveTab=function(e){this.activeTab=e},AdministrationFTSManager.prototype.save=function(){this.ftsconfiguration.save()},AdministrationFTSManager.prototype.putIndex=function(){this.ftsconfiguration.putMapping()},AdministrationFTSManager.prototype.indexModule=function(){this.ftsconfiguration.indexModule()},AdministrationFTSManager.prototype.resetModule=function(){this.ftsconfiguration.resetModule()},AdministrationFTSManager.prototype.initialize=function(){confirm("Are you sure you want to initialize your FTS? It recreates new indices, so indexed data will be lost and have to be rebuild!")&&this.ftsconfiguration.initialize()},AdministrationFTSManager=__decorate([core_1.Component({selector:"[administration-ftsmanager]",template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="module"><option *ngFor="let module of modules" [value]="module">{{module}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><div class="slds-button-group" role="group" *ngIf="!ftsconfiguration.indexing; else indexing"><button type="button" class="slds-button slds-button--neutral" (click)="initialize()">Initialize</button> <button type="button" class="slds-button slds-button--neutral" [disabled]="!module" (click)="putIndex()">Put Mapping</button> <button type="button" class="slds-button slds-button--neutral" [disabled]="!module" (click)="resetModule()">Reset</button> <button type="button" class="slds-button slds-button--neutral" [disabled]="!module" (click)="indexModule()">Index</button> <button type="button" class="slds-button slds-button--brand" [disabled]="!module" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div><ng-template #indexing><system-spinner></system-spinner></ng-template></div></div><div class="slds-tabs--default slds-p-top--xx-small"><div *ngIf="module; else selectmodule"><ul class="slds-tabs--default__nav" role="tablist"><li class="slds-tabs--default__item slds-text-title--caps" [ngClass]="{\'slds-active\': activeTab === \'fields\'}" role="presentation" (click)="setActiveTab(\'fields\')"><a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" aria-selected="false">Fields</a></li><li class="slds-tabs--default__item slds-text-title--caps" [ngClass]="{\'slds-active\': activeTab === \'details\'}" role="presentation" (click)="setActiveTab(\'details\')"><a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" aria-selected="false">Details</a></li></ul><administration-ftsmanager-fields *ngIf="activeTab===\'fields\'"></administration-ftsmanager-fields><administration-ftsmanager-details *ngIf="activeTab===\'details\'"></administration-ftsmanager-details></div><ng-template #selectmodule><div class="slds-p-around--small slds-text-align--center">select a module</div></ng-template></div>',providers:[ftsconfiguration]}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,ftsconfiguration])],AdministrationFTSManager)}();exports.AdministrationFTSManager=AdministrationFTSManager;var AdministrationFTSManagerFields=function(){function e(e,t,s){this.metadata=e,this.language=t,this.ftsconfiguration=s,this.currentfield="",this.fieldDetails={},this.displayAddFieldModal=!1}return e.prototype.selectField=function(e){this.currentfield=e,this.fieldDetails=this.ftsconfiguration.getFieldDetails(e)},Object.defineProperty(e.prototype,"moduleFtsFields",{get:function(){return this.ftsconfiguration.moduleFtsFields},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"aggregateaddparams",{get:function(){return this.fieldDetails.aggregateaddparams?atob(this.fieldDetails.aggregateaddparams):""},set:function(e){this.fieldDetails.aggregateaddparams=e?btoa(e):""},enumerable:!0,configurable:!0}),e.prototype.showAddFields=function(){this.displayAddFieldModal=!0},e.prototype.closeAddFields=function(e){this.displayAddFieldModal=!1},e=__decorate([core_1.Component({selector:"administration-ftsmanager-fields",template:'<div class="slds-grid"><div class="slds-size--1-of-2 slds-p-right--x-small"><table class="slds-table slds-table--cell-buffer"><thead><tr class="slds-text-title--caps slds-theme--shade slds-border--bottom"><th scope="col"><div class="slds-truncate">Field</div></th><th scope="col"><div class="slds-truncate">Name</div></th></tr></thead><tbody><tr class="slds-border--bottom" *ngFor="let moduleFtsField of moduleFtsFields" (click)="selectField(moduleFtsField.id)" [ngClass]="{\'slds-theme--shade\': moduleFtsField.id == currentfield}"><td><div class="slds-truncate">{{moduleFtsField.displaypath}}->{{moduleFtsField.fieldname}}</div></td><td><div class="slds-truncate">{{moduleFtsField.name}}</div></td></tr></tbody></table><div class="slds-p-around--small slds-text-align--center"><a href="javascript:void(0)" (click)="showAddFields()">Add Fields</a></div></div><div class="slds-size--1-of-2"><div *ngIf="currentfield; else selectfield"><h2 class="slds-text-heading--small slds-p-vertical--x-small">Field Details: {{fieldDetails.displaypath}}->{{fieldDetails.fieldname}}</h2><div class="slds-form-element"><label class="slds-form-element__label">Name</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="fieldDetails.name"></div></div><div class="slds-form-element"><label class="slds-form-element__label">IndexType</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldDetails.indextype"><option></option><option value="string">string</option><option value="text">text</option><option value="keyword">keyword</option><option value="date">date</option><option value="double">double</option><option value="parentid">parentid</option><option value="activitydate">activitydate</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Aggregate</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldDetails.aggregate"><option></option><option value="term">Term</option><option value="range">Range</option><option value="datew">Date Week</option><option value="datem">Date Month</option><option value="dateq">Date Quarter</option><option value="datey">Date Year</option></select></div></div></div><div class="slds-form-element" *ngIf="fieldDetails.aggregate"><label class="slds-form-element__label">Aggregate Params</label><div class="slds-form-element__control"><textarea class="slds-textarea" [(ngModel)]="aggregateaddparams"></textarea></div></div><div class="slds-form-element"><label class="slds-form-element__label">Aggregate Size</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="fieldDetails.aggregatesize"></div></div><div class="slds-form-element"><label class="slds-form-element__label">Aggregate Priority</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="fieldDetails.aggregatepriority"></div></div><div class="slds-form-element"><label class="slds-form-element__label">Boost</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="fieldDetails.boost"></div></div><div class="slds-form-element slds-m-top--x-small"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="enablesort" [(ngModel)]="fieldDetails.enablesort"> <label class="slds-checkbox__label" for="enablesort"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Sort</span></label></span></div></div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="search" [(ngModel)]="fieldDetails.search"> <label class="slds-checkbox__label" for="search"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Search</span></label></span></div></div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="emailfield" [(ngModel)]="fieldDetails.email"> <label class="slds-checkbox__label" for="emailfield"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Email</span></label></span></div></div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="duplicatecheck" [(ngModel)]="fieldDetails.duplicatecheck"> <label class="slds-checkbox__label" for="duplicatecheck"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Duplicate Check</span></label></span></div></div><div *ngIf="fieldDetails.duplicatecheck" class="slds-grid slds-grid_vertical-align-center slds-gutters"><div class="slds-col slds-size--1-of-2 slds-form-element"><label class="slds-form-element__label">Duplicate Query</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldDetails.duplicatequery"><option>match (or)</option><option value="match_and">match (and)</option><option value="term">term</option></select></div></div></div><div class="slds-col slds-size--1-of-2 slds-form-element"><label class="slds-form-element__label">Duplicate Fuzziness</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="fieldDetails.duplicatefuzz"></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Analyzer</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldDetails.analyzer"><option>standard</option><option value="spice_ngram">NGram</option><option value="spice_html">HTML</option><option value="spice_edgengram">Edge NGram</option><option value="spice_email">email Address</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Search Analyzer</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldDetails.search_analyzer"><option>standard</option><option value="spice_ngram">NGram</option><option value="spice_html">HTML</option><option value="spice_edgengram">Edge NGram</option><option value="spice_email">email Address</option></select></div></div></div></div><ng-template #selectfield><div class="slds-p-around--small slds-text-align--center">select a field</div></ng-template></div></div><administration-ftsmanager-fields-add *ngIf="displayAddFieldModal" (closeModal)="closeAddFields($event)"></administration-ftsmanager-fields-add>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,ftsconfiguration])],e)}();exports.AdministrationFTSManagerFields=AdministrationFTSManagerFields;var AdministrationFTSManagerDetails=function(){function e(e,t,s){this.metadata=e,this.language=t,this.ftsconfiguration=s}return e=__decorate([core_1.Component({selector:"administration-ftsmanager-details",template:'<div class="slds-p-top--x-small slds-p-horizontal--x-small"><div class="slds-form-element"><label class="slds-form-element__label">Index Priority</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="ftsconfiguration.moduleFtsSettings.index_priority"></div></div><div class="slds-form-element"><label class="slds-form-element__label">fuzziness</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="ftsconfiguration.moduleFtsSettings.fuzziness"></div></div><div class="slds-form-element"><label class="slds-form-element__label">Operator</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="ftsconfiguration.moduleFtsSettings.operator"><option value="and">and</option><option value="or">or</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Minimum Should Match</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="ftsconfiguration.moduleFtsSettings.minimum_should_match"></div></div><div class="slds-form-element"><label class="slds-form-element__label">Multimatch Type</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="ftsconfiguration.moduleFtsSettings.multimatch_type"><option>default</option><option value="best_fields">Best Fields</option><option value="most_fields">Most Fields</option><option value="phrase">Phrase</option><option value="phrase_prefix">Phrase Prefix</option><option value="cross_fields">Cross Fields</option></select></div></div></div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="globalsearch" [(ngModel)]="ftsconfiguration.moduleFtsSettings.globalsearch"> <label class="slds-checkbox__label" for="globalsearch"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Global Search</span></label></span></div></div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" id="emailsearch" [(ngModel)]="ftsconfiguration.moduleFtsSettings.emailsearch"> <label class="slds-checkbox__label" for="emailsearch"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">Email Search</span></label></span></div></div><div class="slds-border--top slds-p-vertical--x-small"><div class="slds-form-element slds-grid slds-grid--vertical-align-center slds-gutters_direct-small"><div class="slds-form-element__control slds-col slds-size--1-of-3"><span class="slds-checkbox"><input type="checkbox" name="options" id="activitiessearch" [(ngModel)]="ftsconfiguration.moduleFtsSettings.activitiessearch"> <label class="slds-checkbox__label" for="activitiessearch"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">include in Activities</span></label></span></div><div class="slds-col slds-size--2-of-3 slds-grid slds-grid--vertical-align-center"><label class="slds-form-element__label">Filter</label><system-input-module-filter class="slds-grow" [(ngModel)]="ftsconfiguration.moduleFtsSettings.activitiesfilter"></system-input-module-filter></div></div><div class="slds-form-element slds-grid slds-grid--vertical-align-center slds-gutters_direct-small"><div class="slds-form-element__control slds-col slds-size--1-of-3"><span class="slds-checkbox"><input type="checkbox" name="options" id="historysearch" [(ngModel)]="ftsconfiguration.moduleFtsSettings.historysearch"> <label class="slds-checkbox__label" for="historysearch"><span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">include in History</span></label></span></div><div class="slds-col slds-size--2-of-3 slds-grid slds-grid--vertical-align-center"><label class="slds-form-element__label">Filter</label><system-input-module-filter class="slds-grow" [(ngModel)]="ftsconfiguration.moduleFtsSettings.historyfilter"></system-input-module-filter></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,ftsconfiguration])],e)}();exports.AdministrationFTSManagerDetails=AdministrationFTSManagerDetails;var AdministrationFTSManagerFieldsAdd=function(){function e(e,t,s,i,a){this.metadata=e,this.language=t,this.ftsconfiguration=s,this.backend=i,this.modelutilities=a,this.closeModal=new core_1.EventEmitter,this.path=[],this.links=[],this.fields=[],this.selectedFields={},this.path.push({type:"root",module:this.ftsconfiguration.module,path:"root:"+this.ftsconfiguration.module}),this.getLinks(),this.getFields()}return e.prototype.chooseBreadcrumb=function(e){this.path=this.path.slice(0,e+1),this.getLinks(),this.getFields()},e.prototype.getLinks=function(){var t=this;this.links=[],this.backend.getRequest("ftsmanager/core/nodes",{node:"root",nodeid:this.buildNodeid()}).subscribe(function(e){t.links=e})},e.prototype.setLink=function(e){this.path.push(e),this.getLinks(),this.getFields()},e.prototype.getFields=function(){var n=this;this.fields=[],this.backend.getRequest("ftsmanager/core/fields",{nodeid:this.buildNodeid()}).subscribe(function(e){for(var t=n.buildNodeid(),s=0,i=e;s<i.length;s++){var a=i[s];n.ftsconfiguration.searchPath(t+"::field:"+a.name)&&(a.exists=!0),n.fields.push(a)}})},e.prototype.buildNodeid=function(){for(var e=[],t=0,s=this.path;t<s.length;t++){var i=s[t];e.push(i.path)}return e.join("::")},e.prototype.getFieldLabel=function(e){var t=this.path[this.path.length-1].path.split(":");return this.language.getFieldDisplayName(t[1],e)},e.prototype.selectField=function(e){if(this.selectedFields[this.buildNodeid()+"::field:"+e.name])delete this.selectedFields[this.buildNodeid()+"::field:"+e.name];else{for(var t="",s=0,i=this.path;s<i.length;s++){""!=t&&(t+="->"),t+=i[s].module}e.displaypath=t,e.fieldname=e.name,e.name=this.getFieldLabel(e.name),this.selectedFields[this.buildNodeid()+"::field:"+e.fieldname]=e}},e.prototype.fieldSelected=function(e){return!!this.selectedFields[this.buildNodeid()+"::field:"+e]},e.prototype.canSave=function(){var e=0;for(var t in this.selectedFields)e++;return 0<e},e.prototype.close=function(){this.closeModal.emit(!1)},e.prototype.save=function(){for(var e in this.selectedFields){for(var t=this.modelutilities.generateGuid(),s="",i=0,a=e.split("::");i<a.length;i++){var n=a[i].split(":");n&&3===n.length&&(s+=n[2]+"->")}this.ftsconfiguration.moduleFtsFields.push({id:t,fieldid:t,fieldname:this.selectedFields[e].fieldname,name:this.selectedFields[e].name,indexfieldname:s+this.selectedFields[e].fieldname,displaypath:this.selectedFields[e].displaypath,path:e,search:!0,indextype:"string",index:"analyzed"})}this.closeModal.emit(!0)},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"closeModal",void 0),e=__decorate([core_1.Component({selector:"administration-ftsmanager-fields-add",template:'<div role="dialog" class="slds-modal slds-fade-in-open slds-modal--large" style="min-height: 90%;"><div class="slds-modal__container"><div class="slds-modal__header"><button class="slds-button slds-modal__close slds-button--icon-inverse" (click)="close()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 class="slds-text-heading--medium">Add Field</h2></div><div class="slds-modal__content" style="height: 80%"><div class="slds-grid"><div class="slds-size--1-of-3 slds-scrollable" style="height: 100%;"><nav class="slds-p-around--small" role="navigation"><ol class="slds-breadcrumb slds-list--horizontal"><li class="slds-breadcrumb__item slds-text-title--caps" *ngFor="let item of path; let i = index"><a href="javascript:void(0);" (click)="chooseBreadcrumb(i)">{{item.module}}</a></li></ol></nav><ul class="slds-p-horizontal--small"><li class="slds-item slds-p-vertical--xxx-small" *ngFor="let link of links"><a href="javascript:void(0)" (click)="setLink(link)">{{link.module}}</a></li></ul></div><div class="slds-size--2-of-3 slds-border--left slds-scrollable" style="height: 100%;"><table class="slds-table slds-table--cell-buffer"><thead><tr class="slds-text-title--caps slds-theme--shade"><th>Add</th><th scope="col"><div class="slds-truncate">Fieldname</div></th><th scope="col"><div class="slds-truncate">Fieldlabel</div></th></tr></thead><tbody><tr class="slds-border--bottom" *ngFor="let field of fields"><td><button class="slds-button slds-button--icon-border" [disabled]="field.exists" [ngClass]="{\'slds-is-selected\': fieldSelected(field.name)}" (click)="selectField(field)"><system-button-icon [icon]="field.exists || fieldSelected(field.fieldname) ? \'check\' : \'add\'"></system-button-icon></button></td><td data-label="Account Name"><div class="slds-truncate">{{field.name}}</div></td><td data-label="Account Name"><div class="slds-truncate">{{getFieldLabel(field.name)}}</div></td></tr></tbody></table></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="close()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="!canSave()" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div><div class="slds-backdrop slds-backdrop--open"></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,ftsconfiguration,services_1.backend,services_1.modelutilities])],e)}();exports.AdministrationFTSManagerFieldsAdd=AdministrationFTSManagerFieldsAdd;var AdministrationFTSStats=function(){function AdministrationFTSStats(e,t,s){var i=this;this.metadata=e,this.language=t,this.backend=s,this.stats={},this.indices=[],this.backend.getRequest("fts/stats").subscribe(function(e){for(var t in(i.stats=e).indices)i.indices.push({name:t,size:e.indices[t].total.store.size_in_bytes,documents:e.indices[t].total.docs.count});i.indices.sort(function(e,t){return e.name>t.name?1:-1})})}return AdministrationFTSStats=__decorate([core_1.Component({template:'<h2 class="slds-text-heading_medium slds-p-around--small">FTS Stats</h2><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col"><div class="slds-truncate">Name</div></th><th scope="col"><div class="slds-truncate">Size</div></th><th scope="col"><div class="slds-truncate">Documents</div></th></tr></thead><tbody><tr *ngFor="let index of indices"><td><div class="slds-truncate">{{index.name}}</div></td><td><div class="slds-truncate">{{index.size}}</div></td><td><div class="slds-truncate">{{index.documents}}</div></td></tr></tbody></table>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.backend])],AdministrationFTSStats)}();exports.AdministrationFTSStats=AdministrationFTSStats;var AdministrationSysTrashcanManager=function(){function AdministrationSysTrashcanManager(e,t,s,i,a){this.metadata=e,this.backend=t,this.language=s,this.userpreferences=i,this.footer=a,this.records=[],this.loaddate={},this.loading=!0}return AdministrationSysTrashcanManager.prototype.ngOnInit=function(){this.getEntries()},AdministrationSysTrashcanManager.prototype.getEntries=function(){var t=this;this.backend.getRequest("systrashcan").subscribe(function(e){t.records=e,t.loaddate=new moment,t.loading=!1})},AdministrationSysTrashcanManager.prototype.reload=function(){this.loading=!0,this.records=[],this.getEntries()},AdministrationSysTrashcanManager.prototype.getUserDate=function(e){return this.userpreferences.formatDateTime(e)},AdministrationSysTrashcanManager.prototype.recoverRecord=function(s){var i=this;this.metadata.addComponent("AdministrationSysTrashcanRecover",this.footer.footercontainer).subscribe(function(e){e.instance.record=s,e.instance.recovered.subscribe(function(e){e&&i.records.some(function(e,t){if(e.id==s.id)return i.records.splice(t,1),!0})})})},AdministrationSysTrashcanManager.prototype.getModule=function(e){return this.metadata.getModuleFromSingular(e)},Object.defineProperty(AdministrationSysTrashcanManager.prototype,"loadDate",{get:function(){return this.loaddate?this.getUserDate(this.loaddate):"---"},enumerable:!0,configurable:!0}),AdministrationSysTrashcanManager=__decorate([core_1.Component({selector:"administration-systrashcan-manager",template:'<div class="slds-page-header"><div class="slds-media"><div class="slds-media__figure"><span class="slds-icon_container slds-icon-action-recall"><svg class="slds-icon slds-page-header__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="./sldassets/icons/action-sprite/svg/symbols.svg#recall"></use></svg></span></div><div class="slds-media__body"><h1 class="slds-page-header__title slds-truncate slds-align-middle">Record Recovery</h1><div class="slds-text-body_small slds-line-height_reset slds-p-vertical--xx-small" (click)="reload()">{{loadDate}}</div></div></div></div><div><div><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col" colspan="2"><div class="slds-truncate" title="Opportunity Name">Object</div></th><th scope="col"><div class="slds-truncate" title="Account Name">Name</div></th><th scope="col"><div class="slds-truncate" title="Close Date">deleted date</div></th><th scope="col"><div class="slds-truncate" title="Stage">deleted by</div></th><th scope="col" style="width: 3.25rem;"><div class="slds-th__action"><span class="slds-assistive-text">Actions</span></div></th></tr></thead><tbody><tr *ngFor="let record of records"><td role="gridcell" class="slds-cell-shrink"><system-icon [module]="getModule(record.recordmodule)" size="small"></system-icon></td><td scope="row"><div class="slds-truncate">{{record.recordmodule}}</div></td><td><div class="slds-truncate">{{record.recordname}}</div></td><td><div class="slds-truncate">{{getUserDate(record.date_deleted)}}</div></td><td><div class="slds-truncate">{{record.user_name}}</div></td><td role="gridcell"><button class="slds-button slds-button_icon slds-button_icon-border-filled slds-button_icon-x-small" (click)="recoverRecord(record)"><system-button-icon [icon]="\'undelete\'"></system-button-icon></button></td></tr></tbody><tbody system-table-stencils [columns]="5" [select]="false" [tools]="true" [rows]="5" *ngIf="loading"></tbody></table><div *ngIf="!loading && records.length == 0" class="slds-p-around--medium slds-align--absolute-center"><h2 class="slds-text-heading--small">no records found</h2></div></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.backend,services_1.language,services_1.userpreferences,services_1.footer])],AdministrationSysTrashcanManager)}();exports.AdministrationSysTrashcanManager=AdministrationSysTrashcanManager;var AdministrationSysTrashcanRecover=function(){function AdministrationSysTrashcanRecover(e,t,s,i){this.metadata=e,this.backend=t,this.language=s,this.toast=i,this.record={},this.self={},this.relatedRecords=[],this.loading=!0,this.recoverrelated=!1,this.recovering=!1,this.recovered=new core_1.EventEmitter}return AdministrationSysTrashcanRecover.prototype.ngOnInit=function(){var t=this;this.backend.getRequest("/systrashcan/related/"+this.record.transactionid+"/"+this.record.recordid).subscribe(function(e){t.relatedRecords=e,0<t.relatedRecords.length&&(t.recoverrelated=!0),t.loading=!1})},AdministrationSysTrashcanRecover.prototype.close=function(){this.recovered.emit(!1),this.self.destroy()},AdministrationSysTrashcanRecover.prototype.getModule=function(e){return this.metadata.getModuleFromSingular(e)},Object.defineProperty(AdministrationSysTrashcanRecover.prototype,"recorverDisabled",{get:function(){return 0==this.relatedRecords.length},enumerable:!0,configurable:!0}),AdministrationSysTrashcanRecover.prototype.doRecover=function(){var t=this;this.recovering=!0,this.backend.postRequest("/systrashcan/recover/"+this.record.id,{recoverrelated:this.recoverrelated}).subscribe(function(e){t.toast.sendToast("record "+t.record.recordname+" recovered"),t.recovered.emit(!0),t.self.destroy()})},__decorate([core_1.Input(),__metadata("design:type",Object)],AdministrationSysTrashcanRecover.prototype,"record",void 0),AdministrationSysTrashcanRecover=__decorate([core_1.Component({template:'<section *ngIf="!recovering" role="dialog" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><header class="slds-modal__header"><button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" (click)="close()"><system-button-icon [icon]="\'close\'" [size]="\'large\'" [inverse]="true"></system-button-icon></button><h2 class="slds-text-heading_medium slds-hyphenate">Recover {{record.recordmodule}} {{record.recordname}}</h2></header><div class="slds-modal__content" style="height: 50%;"><div><table *ngIf="relatedRecords.length > 0; else norelatedrecords" class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col" colspan="2"><div class="slds-truncate" title="Opportunity Name">Object</div></th><th scope="col"><div class="slds-truncate" title="Account Name">Name</div></th><th scope="col"><div class="slds-truncate" title="Account Name">link</div></th></tr></thead><tbody><tr *ngFor="let relatedRecord of relatedRecords"><td role="gridcell" class="slds-cell-shrink"><system-icon [module]="getModule(relatedRecord.linkmodule)" size="small"></system-icon></td><td scope="row"><div class="slds-truncate">{{relatedRecord.linkmodule}}</div></td><td><div class="slds-truncate">{{relatedRecord.recordname}}</div></td><td><div class="slds-truncate">{{relatedRecord.linkname}}</div></td></tr></tbody></table><ng-template #norelatedrecords><div style="height: 100%;" class="slds-p-around--medium slds-align--absolute-center"><h2 class="slds-text-heading--small">no related records found</h2></div></ng-template></div><ng-template #loadspinner><div style="height: 100%;" class="slds-p-around--medium slds-align--absolute-center"><system-spinner></system-spinner></div></ng-template></div><footer class="slds-modal__footer"><div class="slds-grid slds-grid--vertical-align-center slds-grid--align-spread"><div><div [ngClass]="{\'slds-hide\': recorverDisabled}" class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" [(ngModel)]="recoverrelated" id="recoverrelated"> <label class="slds-checkbox__label" for="recoverrelated"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">recover Related</span></label></span></div></div><div><button class="slds-button slds-button--neutral" (click)="close()">Cancel</button> <button class="slds-button slds-button--brand" [disabled]="loading" (click)="doRecover()">Recover</button></div></div></footer></div></section><div class="slds-backdrop slds-backdrop_open slds-align--absolute-center"><div class="slds-box slds-theme--default slds-p-around--medium"><div>recovering record</div><system-spinner></system-spinner></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.backend,services_1.language,services_1.toast])],AdministrationSysTrashcanRecover)}();exports.AdministrationSysTrashcanRecover=AdministrationSysTrashcanRecover;var AdministrationDictRepair=function(){function AdministrationDictRepair(e){this.backend=e,this.loading=!0,this.repairsql="",this.lastDBError=""}return AdministrationDictRepair.prototype.ngOnInit=function(){this.getRepairSQL()},AdministrationDictRepair.prototype.getRepairSQL=function(){var t=this;this.loading=!0,this.backend.getRequest("dictionary/repair").subscribe(function(e){t.repairsql=e.sql,t.loading=!1})},AdministrationDictRepair.prototype.doRepair=function(){var t=this;this.backend.postRequest("dictionary/repair",{},{sql:btoa(this.repairsql)}).subscribe(function(e){t.lastDBError=e.response})},AdministrationDictRepair=__decorate([core_1.Component({selector:"administration-dict-repair",template:'<div class="slds-grid slds-grid--align-spread slds-p-around--medium"><h2 class="slds-text-heading--medium">Repair Dictionary</h2></div><div *ngIf="!loading" class="slds-p-around--small slds-theme--default"><div *ngIf="repairsql !=\'\'"><div class="slds-form-element"><label class="slds-form-element__label">SQL</label><div class="slds-form-element__control"><textarea class="slds-textarea" style="min-height: 400px;" [(ngModel)]="repairsql"></textarea></div></div><div class="slds-text-align_right slds-p-vertical--x-small"><button class="slds-button slds-button--brand" (click)="doRepair()">Execute</button></div><div><div class="slds-form-element"><label class="slds-form-element__label">Last Error</label><div class="slds-form-element__control"><textarea disabled class="slds-textarea" style="min-height: 400px;" [(ngModel)]="lastDBError"></textarea></div></div></div></div><div *ngIf="repairsql ==\'\'" class="slds-box slds-p-around--medium slds-align--absolute-center">no changes required</div></div><div *ngIf="loading" class="slds-p-around--medium"><system-spinner></system-spinner></div>'}),__metadata("design:paramtypes",[services_1.backend])],AdministrationDictRepair)}();exports.AdministrationDictRepair=AdministrationDictRepair;var AdministrationConfigEditor=function(){function AdministrationConfigEditor(e,t,s,i){this.metadata=e,this.language=t,this.backend=s,this.modal=i,this.componentconfig={},this.configvalues={},this.loading=!0}return AdministrationConfigEditor.prototype.ngOnInit=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){s.backend.getRequest("configurator/editor/"+s.componentconfig.category).subscribe(function(e){s.configvalues=e,s.loading=!1,t.instance.self.destroy()})})},Object.defineProperty(AdministrationConfigEditor.prototype,"items",{get:function(){for(var e=[],t=0,s=this.componentconfig.items;t<s.length;t++){var i=s[t];!0!==i.hidden&&e.push(i)}return e},enumerable:!0,configurable:!0}),AdministrationConfigEditor.prototype.save=function(){var s=this;this.loading=!0,this.modal.openModal("SystemLoadingModal").subscribe(function(t){t.instance.messagelabel="LBL_SAVING_DATA",s.backend.postRequest("configurator/editor/"+s.componentconfig.category,[],s.configvalues).subscribe(function(e){s.loading=!1,t.instance.self.destroy()})})},AdministrationConfigEditor=__decorate([core_1.Component({selector:"administration-configeditor",template:'<div class="slds-grid slds-grid--align-spread slds-p-around--medium"><h2 class="slds-text-heading--medium">editor</h2><button class="slds-button slds-button--neutral" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div><table class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col">name</th><th scope="col">value</th></tr></thead><tbody><tr style="vertical-align: middle" class="slds-align-top" *ngFor="let item of items"><td>{{item.name}}</td><td><div class="slds-form-element__control"><input type="text" class="slds-input" [disabled]="loading" [(ngModel)]="configvalues[item.name]"></div></td></tr></tbody></table>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.backend,services_1.modal])],AdministrationConfigEditor)}();exports.AdministrationConfigEditor=AdministrationConfigEditor;var AdministrationSchedulerJobsEnum=function(){function AdministrationSchedulerJobsEnum(e,t,s,i,a,n){var o=this;this.model=e,this.view=t,this.language=s,this.metadata=i,this.router=a,this.backend=n,this.jobsList=[],this.backend.getRequest("module/Scheduler/jobslist").subscribe(function(e){return o.jobsList=Object.keys(e)})}return AdministrationSchedulerJobsEnum.prototype.trackByFn=function(e,t){return e},AdministrationSchedulerJobsEnum=__decorate([core_1.Component({selector:"administration-scheduler-jobs-enum",template:'<system-section [titlelabel]="language.getLabel(\'LBL_JOB\')"><div *ngIf="!view.isEditMode()"><system-stencil *ngIf="model.isLoading"></system-stencil><div *ngIf="!model.isLoading" class="slds-grid slds-grid--align-spread slds-grid--vertical-align-center slds-p-around--small" style="min-height: 20px;"><div class="slds-truncate" style="width:100%">{{model.data[\'job\']}}</div><button style="float: right" class="slds-button slds-button--icon slds-m-left--xx-small" (click)="view.setEditMode()"><system-button-icon [icon]="\'edit\'"></system-button-icon></button></div></div><div *ngIf="view.isEditMode()" class="slds-form-element slds-p-around--small"><div class="slds-form-element__control slds-col"><div class="slds-select_container"><select id="moduleselect" class="slds-select" [(ngModel)]="model.data[\'job\']"><option>{{language.getLabel(\'LBL_SELECT\')}}</option><option *ngFor="let job of jobsList; trackBy: trackByFn" [value]="job">{{job}}</option></select></div></div></div></system-section>'}),__metadata("design:paramtypes",[services_1.model,services_1.view,services_1.language,services_1.metadata,router_1.Router,services_1.backend])],AdministrationSchedulerJobsEnum)}();exports.AdministrationSchedulerJobsEnum=AdministrationSchedulerJobsEnum;var AdministrationSchedulerJobLog=function(){function AdministrationSchedulerJobLog(e,t,s,i,a,n,o){var l=this;this.model=e,this.language=t,this.metadata=s,this.broadcast=i,this.elementRef=a,this.userpreferences=n,this.backend=o,this.schedulerLogs=[],this.isLoading=!1,this.subscription=new rxjs_1.Subscription,this.subscription=this.broadcast.message$.subscribe(function(e){"scheduler.run"==e.messagetype&&l.getData()})}return AdministrationSchedulerJobLog.prototype.ngOnInit=function(){this.getData()},AdministrationSchedulerJobLog.prototype.getData=function(){var t=this;this.isLoading=!0,this.backend.getRequest("module/Schedulers/"+this.model.id+"/related/schedulers_times",{start:0,limit:10}).subscribe(function(e){t.schedulerLogs=_.values(e),t.schedulerLogs.sort(function(e,t){return e.execute_time>t.execute_time?-1:0}),t.isLoading=!1},function(e){return t.isLoading=!1})},AdministrationSchedulerJobLog.prototype.getMoreData=function(){var t=this,e={start:this.schedulerLogs.length,limit:10};this.isLoading=!0,this.backend.getRequest("module/Schedulers/"+this.model.id+"/related/schedulers_times",e).subscribe(function(e){t.schedulerLogs=t.schedulerLogs.concat(_.values(e)),t.schedulerLogs.sort(function(e,t){return e.execute_time>t.execute_time?-1:0}),t.isLoading=!1},function(e){return t.isLoading=!1})},AdministrationSchedulerJobLog.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},AdministrationSchedulerJobLog.prototype.getResolutionClass=function(e){switch(e){case"failure":return"slds-text-color_error";case"success":return"slds-text-color_success";default:return"slds-text-color--default"}},AdministrationSchedulerJobLog.prototype.displayDateValue=function(e){return e?((e=moment(e).tz(moment.tz.guess())).add(e.utcOffset(),"m"),e.format(this.userpreferences.getDateFormat()+" "+this.userpreferences.getTimeFormat())):""},AdministrationSchedulerJobLog.prototype.trackByFn=function(e,t){return t.id},AdministrationSchedulerJobLog=__decorate([core_1.Component({selector:"administration-scheduler-jobs-enum",template:'<table class="slds-table slds-table--bordered slds-table--cell-buffer slds-table--fixed-layout" role="grid"><thead><tr class="slds-line-height_reset"><th scope="col"><div class="slds-truncate">{{language.getLabel(\'LBL_EXECUTE_TIME\')}}</div></th><th scope="col"><div class="slds-truncate">{{language.getLabel(\'LBL_STATUS\')}}</div></th><th scope="col"><div class="slds-truncate">{{language.getLabel(\'LBL_RESOLUTION\')}}</div></th><th scope="col"><div class="slds-truncate">{{language.getLabel(\'LBL_MESSAGE\')}}</div></th></tr></thead><tbody><tr *ngFor="let scheduler of schedulerLogs; trackBy: trackByFn" class="slds-hint-parent"><td scope="row"><div class="slds-truncate">{{displayDateValue(scheduler.execute_time)}}</div></td><td scope="row"><div class="slds-truncate">{{scheduler.status}}</div></td><td scope="row"><div class="slds-truncate" [ngClass]="getResolutionClass(scheduler.resolution)">{{scheduler.resolution}}</div></td><td scope="row" class="slds-grid"><div class="slds-truncate" aria-describedby="more" [title]="scheduler.message">{{scheduler.message}}&nbsp;</div></td></tr><tr *ngIf="schedulerLogs.length == 0"><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table><system-spinner *ngIf="isLoading" class="slds-m-around--xx-small"></system-spinner><div class="slds-p-around--xxx-small"><button class="slds-button slds-button_neutral slds-size--1-of-1 slds-m-top--x-small" [disabled]="isLoading" (click)="getMoreData()">{{language.getLabel(\'LBL_MORE\')}}</button></div>',providers:[services_1.relatedmodels]}),__metadata("design:paramtypes",[services_1.model,services_1.language,services_1.metadata,services_1.broadcast,core_1.ElementRef,services_1.userpreferences,services_1.backend])],AdministrationSchedulerJobLog)}();exports.AdministrationSchedulerJobLog=AdministrationSchedulerJobLog;var AdministrationSchedulerRunButton=function(){function AdministrationSchedulerRunButton(e,t,s,i,a,n,o){this.model=e,this.language=t,this.metadata=s,this.broadcast=i,this.toast=a,this.modal=n,this.backend=o}return AdministrationSchedulerRunButton.prototype.execute=function(){var s=this;this.modal.openModal("SystemLoadingModal",!1).subscribe(function(t){s.backend.postRequest("module/Scheduler/"+s.model.id+"/runjob").subscribe(function(e){t.instance.self.destroy(),e?s.toast.sendToast(s.language.getLabel("MSG_SUCCESSFULLY_EXECUTED"),"success"):s.toast.sendToast(s.language.getLabel("ERR_FAILED_TO_EXECUTE"),"error"),s.broadcast.broadcastMessage("scheduler.run")},function(e){t.instance.self.destroy(),s.toast.sendToast(s.language.getLabel("ERR_FAILED_TO_EXECUTE"),"error"),s.broadcast.broadcastMessage("scheduler.run")})})},AdministrationSchedulerRunButton=__decorate([core_1.Component({selector:"administration-scheduler-run-button",template:"<span>{{language.getLabel('LBL_RUN_NOW')}}</span>"}),__metadata("design:paramtypes",[services_1.model,services_1.language,services_1.metadata,services_1.broadcast,services_1.toast,services_1.modal,services_1.backend])],AdministrationSchedulerRunButton)}();exports.AdministrationSchedulerRunButton=AdministrationSchedulerRunButton;var AdministrationSchedulerScheduleButton=function(){function AdministrationSchedulerScheduleButton(e,t,s,i,a,n,o){this.model=e,this.language=t,this.metadata=s,this.broadcast=i,this.toast=a,this.modal=n,this.backend=o}return AdministrationSchedulerScheduleButton.prototype.execute=function(){var s=this;this.modal.openModal("SystemLoadingModal",!1).subscribe(function(t){s.backend.postRequest("module/Scheduler/"+s.model.id+"/runjob").subscribe(function(e){t.instance.self.destroy(),e?s.toast.sendToast(s.language.getLabel("MSG_SUCCESSFULLY_EXECUTED"),"success"):s.toast.sendToast(s.language.getLabel("ERR_FAILED_TO_EXECUTE"),"error"),s.broadcast.broadcastMessage("scheduler.run")},function(e){t.instance.self.destroy(),s.toast.sendToast(s.language.getLabel("ERR_FAILED_TO_EXECUTE"),"error"),s.broadcast.broadcastMessage("scheduler.run")})})},AdministrationSchedulerScheduleButton=__decorate([core_1.Component({selector:"administration-scheduler-schedule-button",template:"<span>{{language.getLabel('LBL_SCHEDULE_NOW')}}</span>"}),__metadata("design:paramtypes",[services_1.model,services_1.language,services_1.metadata,services_1.broadcast,services_1.toast,services_1.modal,services_1.backend])],AdministrationSchedulerScheduleButton)}();exports.AdministrationSchedulerScheduleButton=AdministrationSchedulerScheduleButton;var AdministrationDictionaryManagerItemField=function(){function e(e){this.dictionary=e,this.field="",this.id="",this.inputvalue="",this.editMode=!1}return Object.defineProperty(e.prototype,"fieldvalue",{get:function(){return this.inputvalue},set:function(e){},enumerable:!0,configurable:!0}),e.prototype.isEditMode=function(){return this.editMode},e.prototype.setEditMode=function(){this.editMode=!0},e.prototype.closeEdit=function(){this.editMode=!1},e.prototype.ngAfterViewInit=function(){},e.prototype.ngOnInit=function(){},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"field",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"id",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"inputvalue",void 0),e=__decorate([core_1.Component({selector:"[administration-dictionarymanager-item-field]",template:'<p *ngIf="!isEditMode()" class="slds-text-body--regular slds-truncate spicecrm-fieldbody"><span>{{fieldvalue}}</span> <button style="float: right" class="slds-button slds-button--icon" (click)="setEditMode()"><svg aria-hidden="true" class="slds-button__icon"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#edit"></use></svg></button></p><div *ngIf="isEditMode()" class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="fieldvalue"></div>'}),__metadata("design:paramtypes",[dictionary])],e)}();exports.AdministrationDictionaryManagerItemField=AdministrationDictionaryManagerItemField;var AdministrationDictionaryManager=function(){function e(e){this.dictionary=e,this.dictionaryitem=""}return e.prototype.ngAfterViewInit=function(){this.dictionary.load(this.dictionaryitem).subscribe(function(e){})},e.prototype.isEditMode=function(){},e.prototype.closeEditMode=function(){},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"dictionaryitem",void 0),e=__decorate([core_1.Component({selector:"administration-dictionarymanager",template:'<div class="slds-page-header" role="banner"><div class="slds-grid"><div class="slds-col slds-has-flexi-truncate"><div class="slds-media slds-no-space slds-grow"><div class="slds-media__body"><h1 class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate">Dictionary {{dictionaryitem}}</h1><p class="slds-text-title--caps slds-line-height--reset">{{dictionary.data.length}} Items</p></div></div></div></div></div><table class="slds-table slds-table--bordered slds-table--fixed-layout" role="grid"><thead><tr class="slds-text-title--caps"><th *ngFor="let field of dictionary.getFields()" class="slds-is-sortable slds-is-resizable" scope="col"><a href="javascript:void(0);" class="slds-th__action slds-text-link--reset"><span class="slds-truncate">{{field}}</span></a></th></tr></thead><tbody><tr administration-dictionarymanager-item class="slds-hint-parent" *ngFor="let item of dictionary.data" [item]="item"></tr></tbody></table><footer class="slds-utility-bar_container" role="footer" *ngIf="isEditMode()"><ul class="slds-utility-bar"><li class="slds-utility-bar__item"><button class="slds-button slds-utility-bar__action slds-button--brand">Save</button></li><li class="slds-utility-bar__item"><button class="slds-button slds-utility-bar__action slds-button--brand" (click)="closeEditMode()">Cancel</button></li></ul></footer>',providers:[dictionary]}),__metadata("design:paramtypes",[dictionary])],e)}();exports.AdministrationDictionaryManager=AdministrationDictionaryManager;var AdministrationDictionaryManagerItem=function(){function e(e){this.dictionary=e,this.item={},this.editMode=!1}return e.prototype.isEditMode=function(){return this.editMode},e.prototype.setEditMode=function(){this.editMode=!0},e.prototype.closeEdit=function(){this.editMode=!1},e.prototype.ngAfterViewInit=function(){},e.prototype.ngOnInit=function(){},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"item",void 0),e=__decorate([core_1.Component({selector:"[administration-dictionarymanager-item]",template:'<td scope="row" *ngFor="let field of dictionary.getFields()"><div administration-dictionarymanager-item-field [field]="field" [id]="item.id" [inputvalue]="item[field]" class="slds-truncate"></div></td>'}),__metadata("design:paramtypes",[dictionary])],e)}();exports.AdministrationDictionaryManagerItem=AdministrationDictionaryManagerItem;var VersionControllerComponent=function(){function VersionControllerComponent(e,t){this.metadata=e,this.vms=t}return Object.defineProperty(VersionControllerComponent.prototype,"module_versions",{get:function(){return this.vms.module_versions},enumerable:!0,configurable:!0}),Object.defineProperty(VersionControllerComponent.prototype,"modules",{get:function(){return this.metadata.getAppModules()},enumerable:!0,configurable:!0}),VersionControllerComponent=__decorate([core_1.Component({selector:"version-controller",template:'<article class="slds-card slds-m-around--medium"><div class="slds-card__header"><h2>Version Control</h2></div><div class="slds-card__body"><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr><th>Name</th><th>Version</th><th>Builddate</th></tr></thead><tbody><tr *ngFor="let m of modules"><ng-container *ngVar="vms.getModule(m.module) as mv"><th>{{m.module}}</th><ng-container *ngIf="mv else not_loaded"><td>{{mv.version}}</td><td>{{mv.build_date}}</td></ng-container><ng-template #not_loaded><td colspan="2" class="slds-text-color--weak">not loaded...</td></ng-template></ng-container></tr></tbody></table></div></article>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.VersionManagerService])],VersionControllerComponent)}();exports.VersionControllerComponent=VersionControllerComponent;var AdministrationMain=function(){function AdministrationMain(){}return AdministrationMain=__decorate([core_1.Component({selector:"administration-main",template:"<div administration-menu></div>"})],AdministrationMain)}();exports.AdministrationMain=AdministrationMain;var AdminComponentsModule=function(){function AdminComponentsModule(e){this.vms=e,this.version="1.0",this.build_date="2019-04-04",e.registerModule(this)}return AdminComponentsModule=__decorate([core_1.NgModule({imports:[common_1.CommonModule,forms_1.FormsModule,systemcomponents_1.SystemComponents,directives_1.DirectivesModule,router_1.RouterModule.forChild([{path:"",component:AdministrationMain}])],declarations:[AdministrationMain,AdministrationMenu,AdministrationMenuRouteItem,AdministrationConfigurator,AdministrationConfiguratorItem,AdministrationConfiguratorItemRole,AdministrationQuotaManager,AdministrationQuotaManagerField,AdministrationFTSManager,AdministrationFTSManagerFields,AdministrationFTSManagerDetails,AdministrationFTSManagerFieldsAdd,AdministrationFTSStats,AdministrationDictionaryManager,AdministrationDictionaryManagerItem,AdministrationDictionaryManagerItemField,AdministrationSysTrashcanManager,AdministrationSysTrashcanRecover,AdministrationDictRepair,VersionControllerComponent,AdministrationConfigEditor,AdministrationSchedulerJobsEnum,AdministrationSchedulerJobLog,AdministrationSchedulerRunButton,AdministrationSchedulerScheduleButton],entryComponents:[AdministrationMain,AdministrationMenu,AdministrationConfigurator,AdministrationQuotaManager,AdministrationQuotaManagerField,AdministrationFTSManager,AdministrationDictionaryManager,AdministrationDictionaryManagerItem,AdministrationDictionaryManagerItemField],exports:[]}),__metadata("design:paramtypes",[services_1.VersionManagerService])],AdminComponentsModule)}();exports.AdminComponentsModule=AdminComponentsModule;